{"version":3,"sources":["component/card/card.component.jsx","component/card-list/card-list.component.jsx","component/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAGaA,EAAO,SAAAC,GAAK,OAErB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,6BACtB,6BACKL,EAAMI,QAAQE,OAEnB,4BAAIN,EAAMI,QAAQG,YCLbC,G,MAAW,SAAAR,GACpB,OACA,qBAAKC,UAAU,YAAf,SAEID,EAAMS,SAASC,KAAK,SAAAN,GAAO,OAC1B,cAAC,EAAD,CAAuBA,QAAWA,GAAvBA,EAAQC,WCNfM,G,MAAY,SAAC,GAAiC,IAAhCC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aACpC,OACI,8BACI,uBAAOZ,UAAU,SACba,KAAK,SACLF,YAAaA,EACbG,SAAUF,QCkCXG,G,wDAtCb,aAAe,IAAD,8BACZ,gBAgCFH,aAAc,SAAAI,GACX,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAhCtC,EAAKC,MAAQ,CACXb,SAAU,GACVU,YAAa,IAJH,E,qDAUd,WAAqB,IAAD,OAClBI,MAAM,+CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAET,SAAUkB,S,oBAG/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/Bb,EADD,EACCA,SAAUU,EADX,EACWA,YACZU,EAAmBpB,EAASqB,QAAQ,SAAA1B,GAAO,OAC/CA,EAAQE,KAAKyB,cAAcC,SAASb,EAAYY,kBAElD,OACE,sBAAK9B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAce,KAAKf,eAErB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA7BVI,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84ecdeeb.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css'\r\n\r\nexport const Card = props => \r\n(\r\n    <div className=\"card-container\">\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&&size=180x180`}></img>\r\n        <h2>\r\n            {props.monster.name}\r\n        </h2>\r\n        <p>{props.monster.email}</p>\r\n    </div>\r\n)","import React from 'react';\r\nimport {Card} from './../card/card.component';\r\nimport './card-list.styles.css'\r\n\r\n\r\nexport const CardList = props => {\r\n    return (\r\n    <div className=\"card-list\">\r\n      {\r\n        props.monsters.map( monster=>\r\n        (<Card key={monster.id} monster = {monster}></Card>)\r\n        )\r\n      }\r\n    </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({placeholder, handleChange}) => {\r\n    return (\r\n        <div>\r\n            <input className=\"search\"\r\n                type=\"search\"\r\n                placeholder={placeholder}\r\n                onChange={handleChange}\r\n            ></input>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import { Component } from \"react\";\nimport { CardList } from \"./component/card-list/card-list.component\";\nimport { SearchBox } from \"./component/search-box/search-box.component\";\nimport \"./App.css\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n  /**\n   * Fetches the users\n   */\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users \")\n      .then((response) => response.json()) // transforms response body into json array (returns promise)\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter( monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox \n          placeholder=\"search monster\"\n          handleChange={this.handleChange}\n          ></SearchBox>\n        <CardList monsters={filteredMonsters}></CardList>\n      </div>\n    );\n  }\n\n  handleChange= e => {\n     this.setState({searchField: e.target.value})\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}